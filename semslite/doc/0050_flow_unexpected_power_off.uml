
'
' host knows the signature of the incoming script
'
' if there was a tearing at the SE, then the 
' SE will expect script with a specific signature only
' so, host can pre-block execution of the script
'

@startuml

title Unexpected Power Off

participant APP as "Application"
participant SEMS_Lite as "SEMS Lite Lib"
participant SE as "Secure Element"

autonumber "<b>[00]"

APP -> SEMS_Lite : sems_lite_agent_init_context()

APP -> SEMS_Lite : sems_lite_agent_session_open()

APP -> SEMS_Lite : sems_lite_agent_load_package()

activate SEMS_Lite

SEMS_Lite -> SE : Check tear and run script

note over SEMS_Lite, SE
	Unexpected power off
end note

APP <-- SEMS_Lite : COM_FAILURE

APP -> SEMS_Lite : sems_lite_agent_session_close()

APP -> SEMS_Lite : sems_lite_agent_init_context()

APP -> SEMS_Lite : sems_lite_agent_session_open()

APP -> SEMS_Lite : sems_lite_check_Tear()

APP <-- SEMS_Lite : Tear status

alt Tearing=Yes

	APP -> SEMS_Lite : sems_lite_get_SignatureofLastScript()

	APP <-- APP : Find last script

else Tearing=No

    APP <-- APP : Find next script

end

APP -> SEMS_Lite : sems_lite_agent_load_package()

SEMS_Lite -> SE : Run Script()

SEMS_Lite <-- SE : Se_ReturnStatus

note over SEMS_Lite, SE
	Return Code Checking
end note

APP <-- SEMS_Lite : Success

APP -> SEMS_Lite : sems_lite_agent_session_close()
        
deactivate SEMS_Lite

@enduml
