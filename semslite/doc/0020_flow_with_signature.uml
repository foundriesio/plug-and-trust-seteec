
'
' host knows the signature of the incoming script
'
' if there was a tearing at the SE, then the 
' SE will expect script with a specific signature only
' so, host can pre-block execution of the script
'

@startuml

title We know signature of the Script

participant APP as "Application"
participant SEMS_Lite as "SEMS Lite Lib"
participant SE as "Secure Element"

autonumber "<b>[00]"

APP -> SEMS_Lite : sems_lite_agent_init_context()

APP -> SEMS_Lite : sems_lite_agent_session_open()

APP -> SEMS_Lite : sems_lite_agent_load_package()

activate SEMS_Lite

SEMS_Lite -> SE : sems_lite_check_Tear
SEMS_Lite <-- SE : TearingStatus

alt Tearing=Yes

SEMS_Lite -> SE : Get Last Signature
SEMS_Lite <-- SE : LastSignature
    alt LastSignature == ThisSignature
		SEMS_Lite -> SE : Run Script()

		SEMS_Lite <-- SE : Se_ReturnStatus

		note over SEMS_Lite, SE
			Return code handling
		end note
    else
        APP <-- SEMS_Lite : DoReRun
        
        APP --> SEMS_Lite : Get Last Signature
        
        SEMS_Lite -> SE : Get Last Signature

		SEMS_Lite <-- SE : LastSignature
		
		APP <-- SEMS_Lite : LastSignature
		
		APP -> SEMS_Lite : sems_lite_agent_session_close()

		APP <-- APP : Find last script
		
		APP -> SEMS_Lite : sems_lite_agent_session_open()

		APP -> SEMS_Lite : sems_lite_agent_load_package()
		
		SEMS_Lite -> SE : Run Script()

		SEMS_Lite <-- SE : Se_ReturnStatus

		note over SEMS_Lite, SE
			Return code handling
		end note

		APP <-- SEMS_Lite : Success
        
    end
else Tearing=No
    SEMS_Lite -> SE : Run Script()

	SEMS_Lite <-- SE : ReturnStatus

	note over SEMS_Lite, SE
		Return code handling
	end note
end

APP -> SEMS_Lite : sems_lite_agent_session_close()

deactivate SEMS_Lite

@enduml
